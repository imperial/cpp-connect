model CompanyProfile {
  id            Int           @id @default(autoincrement())
  name          String
  // Unique slug for the company for use in URLs
  slug          String        @unique
  summary       String        @default("")
  sector        String
  logo          String        @default("")
  banner        String        @default("")
  website       String
  size          String?
  hq            String?
  email         String?
  phone         String?
  founded       String?
  opportunities Opportunity[]
  events        Event[]
  companyUsers  User[]
}

enum OpportunityType {
  Internship
  Placement
  Graduate
  Not_Looking_For_Work
}

model Opportunity {
  id          Int             @id @default(autoincrement())
  company     CompanyProfile  @relation(fields: [companyID], references: [id], onDelete: Cascade)
  companyID   Int
  position    String
  location    String
  available   Boolean
  type        OpportunityType
  createdAt   DateTime        @default(now())
  link        String
  description String
  deadline    DateTime?
}

model Event {
  id        Int            @id @default(autoincrement())
  company   CompanyProfile @relation(fields: [companyID], references: [id], onDelete: Cascade)
  companyID Int
  title     String
  dateStart DateTime
  dateEnd   DateTime?

  shortDescription String
  richSummary      String
  // No. spaces available at the event
  spaces           Int
  location         String
  // Singular outbound link to the event
  link             String
  attachment       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
